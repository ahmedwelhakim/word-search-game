{"ast":null,"code":"import { BehaviorSubject, Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./input-handler.service\";\nimport * as i2 from \"./board.service\";\nlet GameService = /*#__PURE__*/(() => {\n  class GameService {\n    constructor(inputHandler, boardService) {\n      this.inputHandler = inputHandler;\n      this.boardService = boardService;\n      this._selectedWord = new BehaviorSubject('');\n      this.subscriptions = new Subscription();\n      const words = ['كتاب', 'بحر', 'كلب'];\n      this.boardService.fillBoard(10, 10, words);\n      const inputSubscription = this.inputHandler.startEndPoints$.subscribe(([startPoint, endPoint]) => {\n        const selectedWord = this.boardService.getWord(startPoint, endPoint);\n        if (selectedWord) {\n          this._selectedWord.next(selectedWord);\n        }\n      });\n      this.subscriptions.add(inputSubscription);\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    get selectedWord$() {\n      return this._selectedWord.asObservable();\n    }\n  }\n  GameService.ɵfac = function GameService_Factory(t) {\n    return new (t || GameService)(i0.ɵɵinject(i1.InputHandlerService), i0.ɵɵinject(i2.BoardService));\n  };\n  GameService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GameService,\n    factory: GameService.ɵfac\n  });\n  return GameService;\n})();\nexport { GameService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}