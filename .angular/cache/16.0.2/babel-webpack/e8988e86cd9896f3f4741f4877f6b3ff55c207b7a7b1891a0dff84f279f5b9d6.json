{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport { BoardService } from './services/board.service';\nimport { CanvasService } from './services/canvas.service';\nimport { GameService } from './services/game.service';\nimport { InputHandlerService } from './services/input-handler.service';\nimport { SelectorService } from './services/selector.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/canvas.service\";\nimport * as i2 from \"./services/input-handler.service\";\nimport * as i3 from \"./services/selector.service\";\nimport * as i4 from \"./services/board.service\";\nimport * as i5 from \"./services/game.service\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = [\"canvasContainer\"];\nclass GameComponent {\n  constructor(ngZone, canvasService, inputHandlerService, selectorService, boardService, gameService) {\n    this.ngZone = ngZone;\n    this.canvasService = canvasService;\n    this.inputHandlerService = inputHandlerService;\n    this.selectorService = selectorService;\n    this.boardService = boardService;\n    this.gameService = gameService;\n    this.animationFrameNumber = -1;\n    this.subscriptions = new Subscription();\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  ngAfterViewInit() {\n    this.canvas = this.canvasService.canvas;\n    this.canvasContainerRef.nativeElement.appendChild(this.canvas);\n    this.ctx = this.canvasService.ctx;\n    this.onResize();\n    const sub1 = this.inputHandlerService.pressed$.subscribe(pressed => {\n      if (pressed) {\n        this.animationFrameNumber = requestAnimationFrame(this.gameLoop.bind(this));\n      }\n      if (!pressed) {\n        cancelAnimationFrame(this.animationFrameNumber);\n      }\n    });\n    this.subscriptions.add(sub1);\n  }\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.fillStyle = 'skyblue';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.boardService.draw();\n    this.selectorService.draw();\n  }\n  gameLoop() {\n    this.draw();\n    this.animationFrameNumber = requestAnimationFrame(this.gameLoop.bind(this));\n  }\n  onResize() {\n    this.updateBoardSize();\n    this.boardService.updateLettersAndSizes();\n    this.draw();\n  }\n  updateBoardSize() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const minDimension = Math.min(width, height);\n    this.boardSize = minDimension * 0.9;\n    this.canvas.width = this.boardSize;\n    this.canvas.height = this.boardSize;\n  }\n}\nGameComponent.ɵfac = function GameComponent_Factory(t) {\n  return new (t || GameComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.CanvasService), i0.ɵɵdirectiveInject(i2.InputHandlerService), i0.ɵɵdirectiveInject(i3.SelectorService), i0.ɵɵdirectiveInject(i4.BoardService), i0.ɵɵdirectiveInject(i5.GameService));\n};\nGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameComponent,\n  selectors: [[\"app-game\"]],\n  viewQuery: function GameComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasContainerRef = _t.first);\n    }\n  },\n  hostBindings: function GameComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function GameComponent_resize_HostBindingHandler() {\n        return ctx.onResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([GameService, BoardService, CanvasService, InputHandlerService, SelectorService])],\n  decls: 8,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"game-container\"], [1, \"canvas-container\"], [\"canvasContainer\", \"\"], [1, \"selected-word\"]],\n  template: function GameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2, 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(7, 1, ctx.gameService.selectedWord$), \" \");\n    }\n  },\n  dependencies: [i6.AsyncPipe],\n  styles: [\".canvas-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n.container[_ngcontent-%COMP%]   .selected-word[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtBQUNGO0FBQ0U7RUFDRSxrQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmNhbnZhcy1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gIC5zZWxlY3RlZC13b3JkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  changeDetection: 0\n});\nexport { GameComponent };","map":{"version":3,"names":["Subscription","BoardService","CanvasService","GameService","InputHandlerService","SelectorService","GameComponent","constructor","ngZone","canvasService","inputHandlerService","selectorService","boardService","gameService","animationFrameNumber","subscriptions","ngOnDestroy","unsubscribe","ngAfterViewInit","canvas","canvasContainerRef","nativeElement","appendChild","ctx","onResize","sub1","pressed$","subscribe","pressed","requestAnimationFrame","gameLoop","bind","cancelAnimationFrame","add","draw","clearRect","width","height","fillStyle","fillRect","updateBoardSize","updateLettersAndSizes","window","innerWidth","innerHeight","minDimension","Math","min","boardSize","i0","ɵɵdirectiveInject","NgZone","i1","i2","i3","i4","i5","selectors","viewQuery","GameComponent_Query","rf","ɵɵresolveWindow","decls","vars","consts","template","GameComponent_Template","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","selectedWord$"],"sources":["/home/ahmed/Documents/projects/word-matcher/src/app/game/game.component.ts","/home/ahmed/Documents/projects/word-matcher/src/app/game/game.component.html"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BoardService } from './services/board.service';\nimport { CanvasService } from './services/canvas.service';\nimport { GameService } from './services/game.service';\nimport { InputHandlerService } from './services/input-handler.service';\nimport { SelectorService } from './services/selector.service';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [GameService,BoardService, CanvasService, InputHandlerService, SelectorService],\n})\nexport class GameComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('canvasContainer', { static: true })\n  canvasContainerRef!: ElementRef<HTMLDivElement>;\n\n  canvas!: HTMLCanvasElement;\n  ctx!: CanvasRenderingContext2D;\n  boardSize!: number;\n  animationFrameNumber = -1;\n  subscriptions = new Subscription();\n\n  constructor(\n    private ngZone: NgZone,\n    private canvasService: CanvasService,\n    private inputHandlerService: InputHandlerService,\n    private selectorService: SelectorService,\n    private boardService: BoardService,\n    protected gameService: GameService\n  ) {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  ngAfterViewInit(): void {\n    this.canvas = this.canvasService.canvas;\n    this.canvasContainerRef.nativeElement.appendChild(this.canvas);\n    this.ctx = this.canvasService.ctx;\n    this.onResize();\n\n    const sub1 = this.inputHandlerService.pressed$.subscribe((pressed) => {\n      if (pressed) {\n        this.animationFrameNumber = requestAnimationFrame(\n          this.gameLoop.bind(this)\n        );\n      }\n      if (!pressed) {\n        cancelAnimationFrame(this.animationFrameNumber);\n      }\n    });\n    this.subscriptions.add(sub1);\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.fillStyle = 'skyblue';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.boardService.draw();\n    this.selectorService.draw();\n  }\n  gameLoop() {\n    this.draw();\n    this.animationFrameNumber = requestAnimationFrame(this.gameLoop.bind(this));\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.updateBoardSize();\n    this.boardService.updateLettersAndSizes();\n    this.draw();\n  }\n\n  private updateBoardSize() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const minDimension = Math.min(width, height);\n    this.boardSize = minDimension * 0.9;\n    this.canvas.width = this.boardSize;\n    this.canvas.height = this.boardSize;\n  }\n}\n","<div class=\"container\">\n  <div class=\"game-container\">\n    <div #canvasContainer class=\"canvas-container\"></div>\n\n  </div>\n  <div class=\"selected-word\">\n    <p>{{gameService.selectedWord$ | async}} </p>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}