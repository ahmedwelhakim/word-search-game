{"ast":null,"code":"export class Letter {\n  constructor(_letter, _point, _width, wordColor, boxColor) {\n    this._letter = _letter;\n    this._point = _point;\n    this._width = _width;\n    this.wordColor = wordColor;\n    this.boxColor = boxColor;\n    this.font = '20px sans-serif';\n  }\n  static from(letter, point, width, wordColor = 'rgb(2, 2, 58)', boxColor = 'rgb(218, 228, 240)') {\n    return new Letter(letter, point, width, wordColor, boxColor);\n  }\n  update(letter, point, width, wordColor, boxColor) {\n    this._letter = letter;\n    if (point) this._point = point;\n    if (width) this._width = width;\n    if (wordColor) this.wordColor = wordColor;\n    if (boxColor) this.boxColor = boxColor;\n  }\n  updateColors(boxColor, wordColor) {\n    this.boxColor = boxColor;\n    if (wordColor) this.wordColor = wordColor;\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n    ctx.fillStyle = this.boxColor;\n    ctx.fillRect(this._point.x, this._point.y, this._width, this.height);\n    ctx.strokeStyle = this.wordColor;\n    ctx.strokeRect(this._point.x, this._point.y, this._width, this.height);\n    const letterCenter = this.calcLetterCenteredPoint(ctx);\n    ctx.font = this.font;\n    ctx.fillStyle = this.wordColor;\n    ctx.fillText(this._letter, letterCenter.x, letterCenter.y);\n  }\n  get letter() {\n    return this._letter;\n  }\n  get height() {\n    return this._width;\n  }\n  get width() {\n    return this._width;\n  }\n  get topLeftPoint() {\n    return this._point;\n  }\n  get topRightPoint() {\n    return this._point.add(this.width, 0);\n  }\n  get bottomLeftPoint() {\n    return this._point.add(0, this.height);\n  }\n  get bottomRightPoint() {\n    return this._point.add(this.width, this.height);\n  }\n  get centerPoint() {\n    return this._point.add(this.width / 2, this.height / 2);\n  }\n  calcLetterCenteredPoint(ctx) {\n    const metrics = ctx.measureText(this._letter);\n    const center = this.centerPoint;\n    const actualHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const width = metrics.width;\n    return center.add(-width / 2, actualHeight / 2);\n  }\n  static get arabicLetters() {\n    // prettier-ignore\n    return [\"أ\", \"ب\", \"ت\", \"ث\", \"ج\", \"ح\", \"خ\", \"د\", \"ذ\", \"ر\", \"ز\", \"س\", \"ش\", \"ص\", \"ض\", \"ط\", \"ظ\", \"ع\", \"غ\", \"ف\", \"ق\", \"ك\", \"ل\", \"م\", \"ن\", \"ه\", \"و\", \"ي\"];\n  }\n  static get englishLetters() {\n    // prettier-ignore\n    return [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  }\n  static getRandomLetter(lang = 'ar') {\n    if (lang === 'ar') {\n      return Letter.arabicLetters[Math.floor(Math.random() * Letter.arabicLetters.length)];\n    } else {\n      return Letter.englishLetters[Math.floor(Math.random() * Letter.englishLetters.length)];\n    }\n  }\n}","map":{"version":3,"names":["Letter","constructor","_letter","_point","_width","wordColor","boxColor","font","from","letter","point","width","update","updateColors","draw","ctx","beginPath","lineWidth","fillStyle","fillRect","x","y","height","strokeStyle","strokeRect","letterCenter","calcLetterCenteredPoint","fillText","topLeftPoint","topRightPoint","add","bottomLeftPoint","bottomRightPoint","centerPoint","metrics","measureText","center","actualHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","arabicLetters","englishLetters","getRandomLetter","lang","Math","floor","random","length"],"sources":["/home/ahmed/Documents/projects/word-matcher/src/app/game/models/letter.model.ts"],"sourcesContent":["import { Point } from './point.model';\n\nexport class Letter {\n  font: string;\n  private constructor(\n    private _letter: string,\n    private _point: Point,\n    private _width: number,\n    private wordColor: string,\n    private boxColor: string\n  ) {\n    this.font = '20px sans-serif';\n  }\n\n  static from(\n    letter: string,\n    point: Point,\n    width: number,\n    wordColor = 'rgb(2, 2, 58)',\n    boxColor = 'rgb(218, 228, 240)'\n  ) {\n    return new Letter(letter, point, width, wordColor, boxColor);\n  }\n  update(\n    letter: string,\n    point?: Point,\n    width?: number,\n    wordColor?: string,\n    boxColor?: string\n  ) {\n    this._letter = letter;\n    if (point) this._point = point;\n    if (width) this._width = width;\n    if (wordColor) this.wordColor = wordColor;\n    if (boxColor) this.boxColor = boxColor;\n  }\n  updateColors(boxColor: string, wordColor?: string) {\n    this.boxColor = boxColor;\n    if (wordColor) this.wordColor = wordColor;\n  }\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n    ctx.fillStyle = this.boxColor;\n    ctx.fillRect(this._point.x, this._point.y, this._width, this.height);\n    ctx.strokeStyle = this.wordColor;\n    ctx.strokeRect(this._point.x, this._point.y, this._width, this.height);\n    const letterCenter = this.calcLetterCenteredPoint(ctx);\n    ctx.font = this.font;\n    ctx.fillStyle = this.wordColor;\n    ctx.fillText(this._letter, letterCenter.x, letterCenter.y);\n  }\n\n  get letter() {\n    return this._letter;\n  }\n  get height() {\n    return this._width;\n  }\n  get width() {\n    return this._width;\n  }\n  get topLeftPoint() {\n    return this._point;\n  }\n  get topRightPoint() {\n    return this._point.add(this.width, 0);\n  }\n  get bottomLeftPoint() {\n    return this._point.add(0, this.height);\n  }\n  get bottomRightPoint() {\n    return this._point.add(this.width, this.height);\n  }\n  get centerPoint() {\n    return this._point.add(this.width / 2, this.height / 2);\n  }\n  private calcLetterCenteredPoint(ctx: CanvasRenderingContext2D) {\n    const metrics = ctx.measureText(this._letter);\n    const center = this.centerPoint;\n    const actualHeight =\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const width = metrics.width;\n    return center.add(-width / 2, actualHeight / 2);\n  }\n\n  static get arabicLetters() {\n    // prettier-ignore\n    return [\"أ\", \"ب\", \"ت\", \"ث\", \"ج\", \"ح\", \"خ\", \"د\", \"ذ\", \"ر\", \"ز\", \"س\", \"ش\", \"ص\", \"ض\", \"ط\", \"ظ\", \"ع\", \"غ\", \"ف\", \"ق\", \"ك\", \"ل\", \"م\", \"ن\", \"ه\", \"و\", \"ي\"];\n  }\n  static get englishLetters() {\n    // prettier-ignore\n    return [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  }\n  static getRandomLetter(lang = 'ar') {\n    if (lang === 'ar') {\n      return Letter.arabicLetters[\n        Math.floor(Math.random() * Letter.arabicLetters.length)\n      ];\n    } else {\n      return Letter.englishLetters[\n        Math.floor(Math.random() * Letter.englishLetters.length)\n      ];\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}